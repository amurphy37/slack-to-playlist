{"version":3,"sources":["components/landingpage.js","components/authenticate.js","components/callback.js","constants.js","components/slackAuth.js","components/slackRed.js","components/register.js","components/login.js","components/userAuth.js","components/privateRoute.js","components/main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Landing","className","id","to","Button","Component","Authenticate","props","handleAppleAuth","a","music","window","MusicKit","getInstance","authorize","body","appleCode","Axios","post","console","log","handleSpotifyAuth","get","then","response","request","responseURL","substring","location","catch","err","state","bind","onClick","this","label","Callback","search","error","config","url","API_URL","API_URL_USERS","SlackAuth","href","alt","height","width","src","srcset","SlackRedir","componentDidMount","authProcessIncomplete","code","split","data","redir","Register","resetUserInputs","setState","username","password","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","userPayload","redirect","Logo","onChange","type","placeholder","LogIn","payload","status","Auth","getAuth","getValue","axios","isAuth","PrivateRoute","loading","isAuthenticated","component","rest","render","Main","exact","path","LandingPage","App","title","style","textDecoration","color","scroll","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"wNAiBeA,E,uKAXP,OACI,yBAAKC,UAAU,YAAYC,GAAG,qBAC1B,+CACA,sFACA,kBAAC,IAAD,CAAMC,GAAG,aAAY,kBAACC,EAAA,EAAD,CAAQH,UAAU,eAAlB,aACrB,kBAAC,IAAD,CAAME,GAAG,UAAT,2C,GAPME,a,kDCoEPC,E,kDAnEX,WAAaC,GAAQ,IAAD,8BAChB,gBAOJC,gBARoB,sBAQF,gCAAAC,EAAA,sEAGNC,EAAQC,OAAOC,SAASC,cAHlB,SAKcH,EAAMI,YALpB,UAKJA,EALI,SAOJC,EAAO,CACTC,UAAWF,IAGPE,UAXE,iCAYAC,IAAMC,KAAK,wBAAyBH,GAZpC,+BAgBNI,QAAQC,IAAI,sDAhBN,0DAqBVD,QAAQC,IAAR,MArBU,0DARE,EAiCpBC,kBAAoB,WAGhBJ,IAAMK,IAAI,sBAELC,MAAK,SAAAC,GACFL,QAAQC,IAAII,EAASC,QAAQC,aAC7B,IAAIA,EAAcF,EAASC,QAAQC,YAAYC,UAAU,IACzDhB,OAAOiB,SAAWF,KAGrBG,OAAM,SAAAC,GACHX,QAAQC,IAAI,gCACZD,QAAQC,IAAIU,OA5CpB,EAAKC,MAAQ,GAEb,EAAKV,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBACzB,EAAKxB,gBAAkB,EAAKA,gBAAgBwB,KAArB,gBALP,E,qDAmDhB,OACI,yBAAK/B,UAAU,gBAAgBC,GAAG,qBAC9B,6BACI,+DACA,6BACA,6BACA,yFACA,kBAACE,EAAA,EAAD,CAAQ6B,QAASC,KAAKb,kBAAmBpB,UAAU,WAAnD,mBACA,kBAACG,EAAA,EAAD,CAAQ6B,QAASC,KAAK1B,gBAAiBP,UAAU,UAAUkC,MAAM,oBAAjE,6B,GA5DO9B,aCeZ+B,E,kLAdPnB,IAAMK,IAAI,wBAA0BY,KAAK3B,MAAMqB,SAASS,QACnDd,MAAK,SAAAC,GACFL,QAAQC,IAAII,GACZb,OAAOiB,SAAWJ,EAASC,QAAQC,eAEtCG,OAAM,SAAAS,GACHnB,QAAQC,IAAIkB,Q,+BAIpB,OAAQ,kC,GAZOjC,aCWRkC,EAdF,CACTC,IAAK,CACDC,QAAS,wCACLC,cAAe,sCC4BZC,E,uKAvBH,OACI,6BACI,wBAAI1C,UAAU,kBAAd,gFACwB,0BAAvBsC,EAAOC,IAAIC,QACP,yBAAKxC,UAAU,YACZ,uBAAG2C,KAAK,6LACJ,yBAAKC,IAAI,sBAAsBC,OAAO,KAAKC,MAAM,MAAMC,IAAI,6DAA6DC,OAAO,sIAItI,yBAAKhD,UAAU,YACZ,uBAAG2C,KAAK,2MACJ,yBAAKC,IAAI,sBAAsBC,OAAO,KAAKC,MAAM,MAAMC,IAAI,6DAA6DC,OAAO,2I,GAfvI5C,aCyCT6C,E,kDAzCX,WAAa3C,GAAQ,IAAD,8BAChB,cAAMA,IAMV4C,kBAAoB,WAEhB,GAAI,EAAKpB,MAAMqB,sBAAuB,CAClC,IAMMrC,EAAO,CAAEsC,KANA1C,OAAOiB,SAASS,OACHiB,MAAM,KACK,GACAA,MAAM,KACd,IAI/BrC,IAAMC,KAAK,kBAAmBH,GACzBQ,MAAK,SAAAC,GACFL,QAAQC,IAAII,GAEZb,OAAOiB,SAAWJ,EAAS+B,KAAKC,cAMxCrC,QAAQC,IAAI,oBA1BhB,EAAKW,MAAQ,CACTqB,uBAAuB,GAHX,E,qDAkChB,OACI,kC,GArCa/C,a,yBC6GVoD,E,kDA3GX,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAWVmD,gBAAkB,WACd,EAAKC,SAAS,CACVC,SAAU,GACVC,SAAU,MAfC,EAoBnBC,kBAAoB,SAAAC,GAAS,MAEDA,EAAMC,OAAtBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAGd,EAAKP,SAAL,eACKM,EAAOC,KA1BG,EA8BnBC,iBAAmB,SAAAJ,GACfA,EAAMK,iBAEN,IAAMC,EAAc,CAChBT,SAAU,EAAK7B,MAAM6B,SACrBC,SAAU,EAAK9B,MAAM8B,UAGzB5C,IAAMC,KAAK,cAAemD,GACrB9C,MAAK,SAAUC,GAERA,EAAS+B,KAAKe,UACdnD,QAAQC,IAAI,qBACZT,OAAOiB,SAAW,KAElBT,QAAQC,IAAI,oBAGnBS,OAAM,SAAAC,GACHX,QAAQC,IAAI,0BACZD,QAAQC,IAAIU,OAhDpB,EAAKC,MAAQ,CACT6B,SAAU,GACVC,SAAU,IAGd,EAAKH,gBAAkB,EAAKA,gBAAgB1B,KAArB,gBACvB,EAAK8B,kBAAoB,EAAKA,kBAAkB9B,KAAvB,gBACzB,EAAKmC,iBAAmB,EAAKA,iBAAiBnC,KAAtB,gBATT,E,qDAuDf,OACI,yBAAK/B,UAAU,mBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+BACX,yBAAK+C,IAAKuB,IAAMtE,UAAU,oBAAoB4C,IAAI,WAG1D,yBAAK5C,UAAU,uDACX,0BAAMA,UAAU,UACZ,yBAAKA,UAAU,cACX,2CACA,2BACIiE,MAAOhC,KAAKH,MAAM6B,SAClBK,KAAK,WACLO,SAAUtC,KAAK4B,kBACfW,KAAK,OACLxE,UAAU,eACVyE,YAAY,cAIpB,yBAAKzE,UAAU,cACX,2CACA,2BACIiE,MAAOhC,KAAKH,MAAM8B,SAClBI,KAAK,WACLO,SAAUtC,KAAK4B,kBACfW,KAAK,WACLxE,UAAU,0BACVyE,YAAY,cAIpB,4BAAQzC,QAASC,KAAKiC,iBAAkBlE,UAAU,8BAAlD,aAGR,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uCACX,uBAAG2C,KAAK,SAAS3C,UAAU,QAA3B,6B,GAhGTI,aCyHRsE,E,kDAvHX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAUVmD,gBAAkB,WACd,EAAKC,SAAS,CACVC,SAAU,GACVC,SAAU,MAdC,EAkBnBC,kBAAoB,SAAAC,GAAS,MAEDA,EAAMC,OAAtBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAGd,EAAKP,SAAL,eACKM,EAAOC,KAxBG,EA4BnBC,iBAAmB,SAAAJ,GACfA,EAAMK,iBAEN,IAAMQ,EAAU,CACZhB,SAAU,EAAK7B,MAAM6B,SACrBC,SAAU,EAAK9B,MAAM8B,UAGzB5C,IACKC,KAAK,cAAe0D,GACpBrD,MAAK,SAAAC,GACFL,QAAQC,IAAI,oBACZD,QAAQC,IAAII,GACY,MAApBA,EAASqD,SACT1D,QAAQC,IAAI,OAEmB,eAA3BI,EAAS+B,KAAKe,SACd3D,OAAOiB,SAAW,aAEc,WAA3BJ,EAAS+B,KAAKe,WACnB3D,OAAOiB,SAAW,cAI7BC,OAAM,SAAAS,GACHnB,QAAQC,IAAI,gBACZD,QAAQC,IAAIkB,GACZ3B,OAAOiB,SAAW,aArD1B,EAAKG,MAAQ,CACT6B,SAAU,GACVC,SAAU,IAEd,EAAKH,gBAAkB,EAAKA,gBAAgB1B,KAArB,gBACvB,EAAK8B,kBAAoB,EAAKA,kBAAkB9B,KAAvB,gBACzB,EAAKmC,iBAAmB,EAAKA,iBAAiBnC,KAAtB,gBART,E,qDA6Df,OACI,yBAAK/B,UAAU,mBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,8BACX,yBAAK+C,IAAKuB,IAAMtE,UAAU,mBAAmB4C,IAAI,WAGzD,yBAAK5C,UAAU,sDACX,0BAAMA,UAAU,SACZ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sBACX,0BAAMA,UAAU,oBAAmB,uBAAGA,UAAU,kBAEpD,2BACIiE,MAAOhC,KAAKH,MAAM6B,SAClBK,KAAK,WACLO,SAAUtC,KAAK4B,kBACfW,KAAK,OACLxE,UAAU,gCACVyE,YAAY,cAIpB,yBAAKzE,UAAU,oBACX,yBAAKA,UAAU,sBACX,0BAAMA,UAAU,oBAAmB,uBAAGA,UAAU,iBAEpD,2BACIiE,MAAOhC,KAAKH,MAAM8B,SAClBI,KAAK,WACLO,SAAUtC,KAAK4B,kBACfW,KAAK,WACLxE,UAAU,gCACVyE,YAAY,cAIpB,yBAAKzE,UAAU,sDACX,4BAAQgC,QAASC,KAAKiC,iBAAkBlE,UAAU,iBAAlD,YAKZ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uCAAf,0BAC2B,uBAAG2C,KAAK,YAAY3C,UAAU,QAA9B,oB,GA9GnCI,a,QCmBLyE,EArBF,CACHC,QADG,WACQ,OAAD,uCACGC,EADH,wHACZ,sBAAAvE,EAAA,+EAE+BwE,IAAM3D,IAAI,SAFzC,UAI8B,sBAJ9B,OAIqBiC,KAJrB,0CAKmB,GALnB,iCAQmB,GARnB,yDAYQpC,QAAQC,IAAR,MAZR,2DADY,uBACG4D,EADH,oDAgBSA,IAhBT,cAgBNE,EAhBM,yBAiBLA,GAjBK,+CC2CLC,E,kDAxCX,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACTqD,SAAS,EACTC,iBAAiB,GAJN,E,gEAQE,IAAD,OAChBP,EAAKC,UACAxD,MAAK,SAAA8D,GACFlE,QAAQC,IAAIiE,GACZ,EAAK1B,SAAS,CACVyB,SAAS,EACTC,gBAAiBA,S,+BAKvB,IAAD,SACqCnD,KAAK3B,MAA5BF,EADd,EACGiF,UAAyBC,EAD5B,6BAEL,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAjF,GAAK,OACT,EAAKwB,MAAMsD,gBACP,kBAAChF,EAAcE,GAEX,EAAKwB,MAAMqD,QACP,wCAEI,kBAAC,IAAD,CAAUjF,GAAG,c,GAhCtBE,aCsBZoF,MAhBf,SAAelF,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,IAAIL,UAAWM,IACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYL,UAAW7B,IACzC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,SAASL,UAAWX,IACtC,kBAAC,EAAD,CAAce,OAAK,EAACC,KAAK,aAAaL,UAAW3C,IACjD,kBAAC,EAAD,CAAc+C,OAAK,EAACC,KAAK,cAAcL,UAAWpC,IAClD,kBAAC,EAAD,CAAcwC,OAAK,EAACC,KAAK,QAAQL,UAAWhF,IAC5C,kBAAC,EAAD,CAAcoF,OAAK,EAACC,KAAK,mBAAmBL,UAAWlD,IACvD,kBAAC,EAAD,CAAcsD,OAAK,EAACC,KAAK,cAAcL,UAAWhF,MCI/CuF,MAnBf,WACE,OACE,yBAAK5F,UAAU,gBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CAAQA,UAAU,eAAe6F,MAAO,kBAAC,IAAD,CAAMC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAAW9F,GAAG,KAA5D,mBAAwF+F,QAAM,GACpI,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAM/F,GAAG,aAAT,kBACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,YAGJ,kBAAC,UAAD,KACE,yBAAKF,UAAU,iBACf,kBAAC,EAAD,UCNUkG,QACW,cAA7BxF,OAAOiB,SAASwE,UAEe,UAA7BzF,OAAOiB,SAASwE,UAEhBzF,OAAOiB,SAASwE,SAASC,MACvB,2D,cCTNC,IAASd,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFe,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEdhF,OAAM,SAAAS,GACLnB,QAAQmB,MAAMA,EAAMwE,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.7be99c78.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n    render () {\n        return (\n            <div className=\"container\" id=\"landing-container\">\n                <h1>SlackToPlaylist</h1>\n                <h2>Automatically add songs to playlist from Slack channel</h2>\n                <Link to=\"/register\"><Button className=\"registerBtn\">Register</Button></Link>\n                <Link to=\"/login\">Already a member? Click to log in.</Link>\n            </div>\n        )\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Axios from \"axios\"\n\nclass Authenticate extends Component {\n    constructor (props) {\n        super ()\n        this.state = {}\n\n        this.handleSpotifyAuth = this.handleSpotifyAuth.bind(this)\n        this.handleAppleAuth = this.handleAppleAuth.bind(this)\n    }\n\n    handleAppleAuth = async () => {\n        try{\n\n            let music = window.MusicKit.getInstance()\n\n            const authorize = await music.authorize()\n\n            const body = {\n                appleCode: authorize\n            }\n\n            if(body.appleCode) {\n                await Axios.post(\"/user/appleProfUpdate\", body)\n            }\n\n            else {\n                console.log(\"No Authorization code - post request not submitted\")\n            }\n\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    handleSpotifyAuth = () => {\n\n\n        Axios.get(\"/user/spotifyLogin\")\n            \n            .then(response => {\n                console.log(response.request.responseURL)\n                var responseURL = response.request.responseURL.substring(36, )\n                window.location = responseURL\n               \n            })\n            .catch(err => {\n                console.log(\"Spotify authentication error\")\n                console.log(err)\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"authContainer\" id=\"landing-container\">\n                <div>\n                    <h2>Final Step: Link Music Accounts</h2>\n                    <br></br>\n                    <br></br>\n                    <h3>Click below to link your Spotify or Apple Music accounts.</h3>\n                    <Button onClick={this.handleSpotifyAuth} className=\"authBtn\">Link to Spotify</Button>\n                    <Button onClick={this.handleAppleAuth} className=\"authBtn\" label=\"Link Apple Music\">Link to Apple Music</Button>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Authenticate;","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass Callback extends Component {\n    componentDidMount () {\n        Axios.get(\"/user/spotifyCallback\" + this.props.location.search)\n            .then(response => {\n                console.log(response)\n                window.location = response.request.responseURL\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    render() {\n        return (<div></div>)\n    }\n}\n\nexport default Callback;","const prod = {\n    url: {\n        API_URL: \"https://slacktoplaylist.herokuapp.com\",\n            API_URL_USERS: \"https://myapp.herokuapp.com/users\"\n        }\n};\n    const dev = {\n        url: {\n            API_URL: \"http://localhost:3000\"\n }\n    };\n\nconst config = process.env.NODE_ENV === \"development\" ? dev : prod;\n\nexport default config","import React, { Component } from 'react';\nimport config from \"../constants\"\n\n\n\nclass SlackAuth extends Component {\n    render() {\n            \n            return (\n                <div>\n                    <h2 className=\"slackContainer\">First Step: Link your Slack account where SlackToPlaylist has been activated</h2>\n                    {config.url.API_URL === \"http://localhost:3000\" ?\n                        (<div className=\"slackBtn\">\n                            <a href=\"https://slack.com/oauth/v2/authorize?user_scope=identity.basic,identity.email,identity.team&client_id=1316992117988.1323435218849&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2FslackRedir\">\n                                <img alt=\" Sign in with Slack\" height=\"40\" width=\"172\" src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\" srcset=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\" />\n                            </a>\n                        </div>)\n                        :\n                        (<div className=\"slackBtn\">\n                            <a href=\"https://slack.com/oauth/v2/authorize?user_scope=identity.basic,identity.email,identity.team&client_id=1316992117988.1323435218849&redirect_uri=https%3A%2F%2Fslacktoplaylist.herokuapp.com%2FslackRedir\">\n                                <img alt=\" Sign in with Slack\" height=\"40\" width=\"172\" src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\" srcset=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\" />\n                            </a>\n                        </div>)\n                        }\n                </div>\n            )\n\n        \n    }\n}\n\nexport default SlackAuth;","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass SlackRedir extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            authProcessIncomplete: true\n        }\n    }\n\n    componentDidMount = () => {\n\n        if (this.state.authProcessIncomplete) {\n            const search = window.location.search\n            const searchValArr = search.split(\"=\")\n            const slackCodeandState = searchValArr[1]\n            const codeStateArr = slackCodeandState.split(\"&\")\n            const slackCode = codeStateArr[0]\n\n            const body = { code: slackCode }\n\n            Axios.post(\"/user/slackAuth\", body)\n                .then(response => {\n                    console.log(response)\n\n                    window.location = response.data.redir\n                })\n\n        }\n\n        else {\n            console.log(\"second redirect\")\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default SlackRedir;","import React, { Component } from \"react\";\nimport Logo from \"../logo.svg\"\nimport Axios from \"axios\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n\n        this.resetUserInputs = this.resetUserInputs.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    }\n\n    resetUserInputs = () => {\n        this.setState({\n            username: \"\",\n            password: \"\"\n        })\n    }\n\n    // Function to edit state values upon input change\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n\n        // Updating the input's state\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault()\n\n        const userPayload = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        Axios.post(\"user/signup\", userPayload)\n            .then(function (response) {\n                // If we get back a response from our database, we determine this to be successful and can redirect the user to the home screen.\n                if (response.data.redirect) {\n                    console.log(\"successful signup\")\n                    window.location = \"/\"\n                } else {\n                    console.log(\"Sign-up error\");\n                }\n            })\n            .catch(err => {\n                console.log(\"Sign up server error: \")\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"container h-100\">\n                <div className=\"d-flex justify-content-center h-100\">\n                    <div className=\"user_card_signup\">\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"brand_logo_container_signup\">\n                                <img src={Logo} className=\"brand_logo_signup\" alt=\"logo\"></img>\n                            </div>\n                        </div>\n                        <div className=\"d-flex justify-content-center form_container_signup\">\n                            <form className=\"signup\">\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input\n                                        value={this.state.username}\n                                        name=\"username\"\n                                        onChange={this.handleInputChange}\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Username\">\n\n                                    </input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input\n                                        value={this.state.password}\n                                        name=\"password\"\n                                        onChange={this.handleInputChange}\n                                        type=\"password\"\n                                        className=\"form-control input_pass\"\n                                        placeholder=\"Password\">\n\n                                    </input>\n                                </div>\n                                <button onClick={this.handleFormSubmit} className=\"btn btn-primary signup_btn\">Sign Up</button>\n                            </form>\n                        </div>\n                        <div className=\"mt-4\">\n                            <div className=\"d-flex justify-content-center links\">\n                                <a href=\"/login\" className=\"ml-2\">Have an account?</a>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport Logo from \"../logo.svg\"\nimport Axios from \"axios\";\n\nclass LogIn extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n        this.resetUserInputs = this.resetUserInputs.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    }\n\n    resetUserInputs = () => {\n        this.setState({\n            username: \"\",\n            password: \"\",\n        });\n    };\n\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n\n        // Updating the input's state\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault()\n\n        const payload = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        Axios\n            .post(\"/user/login\", payload)\n            .then(response => {\n                console.log(\"login response: \")\n                console.log(response)\n                if (response.status === 200) {\n                    console.log(\"200\")\n\n                    if (response.data.redirect === \"/slackAuth\") {\n                        window.location = \"/slackAuth\"\n                    }\n                    else if (response.data.redirect === \"/login\") {\n                        window.location = \"/login\"\n                    }\n                }\n            })\n            .catch(error => {\n                console.log(\"login error \")\n                console.log(error);\n                window.location = \"/login\"\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"container h-100\">\n                <div className=\"d-flex justify-content-center h-100\">\n                    <div className=\"user_card_login\">\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"brand_logo_container_login\">\n                                <img src={Logo} className=\"brand_logo_login\" alt=\"logo\"></img>\n                            </div>\n                        </div>\n                        <div className=\"d-flex justify-content-center form_container_login\">\n                            <form className=\"login\">\n                                <div className=\"input-group mb-3\">\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\n                                    </div>\n                                    <input\n                                        value={this.state.username}\n                                        name=\"username\"\n                                        onChange={this.handleInputChange}\n                                        type=\"text\"\n                                        className=\"form-control input_user_login\"\n                                        placeholder=\"username\"\n                                    >\n                                    </input>\n                                </div>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\n                                    </div>\n                                    <input\n                                        value={this.state.password}\n                                        name=\"password\"\n                                        onChange={this.handleInputChange}\n                                        type=\"password\"\n                                        className=\"form-control input_pass_login\"\n                                        placeholder=\"password\"\n                                    >\n                                    </input>\n                                </div>\n                                <div className=\"d-flex justify-content-center mt-3 login_container\">\n                                    <button onClick={this.handleFormSubmit} className=\"btn login_btn\">Login</button>\n                                </div>\n                            </form>\n\n                        </div>\n                        <div className=\"mt-4\">\n                            <div className=\"d-flex justify-content-center links\">\n                                Don't have an account? <a href=\"/register\" className=\"ml-2\">Sign Up</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default LogIn;","import axios from \"axios\"\n\nconst Auth = {\n    async getAuth() {\n        async function getValue() {\n            try {\n                const userAuth = await axios.get(\"/user\")\n\n                if (userAuth.data === \"no user logged in\") {\n                    return false\n                }\n                else {\n                    return true\n                }\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n        const isAuth = await getValue()\n        return isAuth\n    }\n};\nexport default Auth;","import React, { Component } from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nimport Auth from \"./userAuth\"\n\nclass PrivateRoute extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            isAuthenticated: false\n        }\n    }\n\n    componentDidMount() {\n        Auth.getAuth()\n            .then(isAuthenticated => {\n                console.log(isAuthenticated)\n                this.setState({\n                    loading: false,\n                    isAuthenticated: isAuthenticated\n                })\n            })\n    }\n\n    render() {\n        const { component: Component, ...rest } = this.props\n        return (\n            <Route\n                {...rest}\n                render={props =>\n                    this.state.isAuthenticated ? (\n                        <Component {...props} />\n                    ) : (\n                            this.state.loading ? (\n                                <div>LOADING</div>\n                            ) : (\n                                    <Redirect to=\"/\" />\n                                )\n                        )\n                }\n            />\n        )\n    }\n}\n\nexport default PrivateRoute","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from \"./landingpage\";\nimport Authenticate from \"./authenticate\";\nimport Callback from \"./callback\"\nimport SlackAuth from \"./slackAuth\"\nimport SlackRedir from \"./slackRed\"\nimport Register from './register';\nimport LogIn from './login';\nimport PrivateRoute from \"./privateRoute\";\n\nfunction Main (props) {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={LogIn} />\n            <PrivateRoute exact path=\"/slackAuth\" component={SlackAuth} />\n            <PrivateRoute exact path=\"/slackRedir\" component={SlackRedir} />\n            <PrivateRoute exact path=\"/home\" component={Authenticate} />\n            <PrivateRoute exact path=\"/spotifyCallback\" component={Callback} />\n            <PrivateRoute exact path=\"/user/slack\" component={Authenticate} />\n        </Switch>\n    )\n\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"AppParentDiv\">\n      <Layout>\n        <Header className=\"header-color\" title={<Link style={{ textDecoration: 'none', color: 'white' }} to=\"/\">SlackToPlaylist</Link>} scroll>\n          <Navigation>\n            <Link to=\"/register\">Register Today</Link>\n            <Link to=\"/login\">Log In</Link>\n          </Navigation>\n        </Header>\n        <Content>\n          <div className=\"page-content\" />\n          <Main />\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}